//Copy Rights To Marwan Mohamed Hafez
//mscript@live.com
//mScript V 1.1
(function() { function mClass(Es) { function mCl(e) { return new mClass(mC.isAry(e) ? e : []) } function Check(e) { var t = 0; var n = []; var r, i = []; var s = {}; if (mC.isSomeThing(e)) { r = mC.isSomeThing(e["Values"]) ? mC.isStr(e["Values"]) ? e["Values"].split(",") : mC.isAry(e["Values"]) ? e["Values"] : [] : []; i = mC.isSomeThing(e["Indexs"]) ? mC.isStr(e["Indexs"]) ? e["Indexs"].split(",") : mC.isAry(e["Indexs"]) ? e["Indexs"] : [] : []; s = mC.isObj(e["Attrs"]) ? e["Attrs"] : {} } Es.Each(function(o) { var u = o.type == "radio" || o.type == "checkbox" ? new mClass([o]) : (new mClass([o])).getByTypes("radio,checkbox"); u.Each(function(o) { var u = o.Elements[0]; if (mC.isSomeThing(e)) { if (mC.isObj(e)) { r.Each(function(e) { u.value == e ? u.checked = true : null }); i.Each(function(e) { t == e ? u.checked = true : null }); t += 1; var a = false; var f = false; if (mC.isBoolean(s.Ext)) { a = s.Ext; delete s.Ext } if (mC.isBoolean(e.Clear)) { f = e.Clear } if (o.Attrs.Have(s, a)) { u.checked = true } } else if (mC.isBoolean(e)) { u.checked = e } } else { if (u.checked == true) { n[n.length] = u } } }) }); return mCl(mC.isSomeThing(e) ? Es.noDuplicate() : n.noDuplicate()) } function Select(e) { var t = 0; var n = []; var r, i, s = []; var o = {}; if (mC.isSomeThing(e)) { r = mC.isSomeThing(e["Texts"]) ? mC.isStr(e["Texts"]) ? e["Texts"].split(",") : mC.isAry(e["Texts"]) ? e["Texts"] : [] : []; i = mC.isSomeThing(e["Values"]) ? mC.isStr(e["Values"]) ? e["Values"].split(",") : mC.isAry(e["Values"]) ? e["Values"] : [] : []; s = mC.isSomeThing(e["Indexs"]) ? mC.isStr(e["Indexs"]) ? e["Indexs"].split(",") : mC.isAry(e["Indexs"]) ? e["Indexs"] : [] : []; o = mC.isObj(e["Attrs"]) ? e["Attrs"] : {} } Es.Each(function(u) { var a = u.tagName == "OPTION" ? new mClass([u]) : u.tagName == "SELECT" ? (new mClass([u])).getByTagNames("OPTION") : new mClass([]); a.Each(function(u) { var a = u.Elements[0]; if (mC.isSomeThing(e)) { if (mC.isObj(e)) { i.Each(function(e) { a.value == e ? a.selected = true : null }); s.Each(function(e) { t == e ? a.selected = true : null }); r.Each(function(e) { e == a.text ? a.selected = true : null }); t += 1; var f = false; var l = false; if (mC.isBoolean(o.Ext)) { f = o.Ext; delete o.Ext } if (mC.isBoolean(e.Clear)) { l = e.Clear } if (u.Attrs.Have(o, f)) { a.selected = true } } else if (mC.isBoolean(e)) { a.selected = e } } else { if (a.selected == true) { n[n.length] = a } } }) }); return mCl(mC.isSomeThing(e) ? Es.noDuplicate() : n.noDuplicate()) } function getAlEAry() { var e = []; if (Es != null && Es != undefined) { if (Es.constructor == Array) { for (var t = 0; t < Es.length; t++) { var n = Es[t]; if (n.getElementsByTagName) { var r = n.getElementsByTagName("*"); for (var i = 0; i < r.length; i++) { e[e.length] = r[i] } } } } } else { var s = []; var o = document.body.getElementsByTagName("*"); for (var t = 0; t < o.length; t++) s[s.length] = o[t]; e = s } return e } function browserData() { var e = { Name: null, Version: null }; var t = navigator.userAgent.split(" "); t.Each(function(n, r) { switch (true) { case mC.Browser().isIE() && n.indexOf("MSIE") != -1: e.Version = t[r + 1].fTrim().Replace(";", ""); e.Name = "MSIE"; break; case mC.Browser().isOpera() && n.indexOf("Opera") != -1: e.Version = n.split("/")[1].fTrim(); e.Name = "OPERA"; break; case mC.Browser().isFirefox() && n.indexOf("Firefox") != -1: e.Version = n.split("/")[1].fTrim(); e.Name = "FIREFOX"; break; case mC.Browser().isChrome() && n.indexOf("Chrome") != -1: e.Version = n.split("/")[1].fTrim(); e.Name = "CHROME"; break; case mC.Browser().isSafari() && n.indexOf("Version") != -1: e.Version = n.split("/")[1].fTrim(); e.Name = "SAFARI"; break; case mC.Browser().isMaxthon() && n.indexOf("Maxthon") != -1: e.Version = n.split("/")[1].fTrim(); e.Name = "MAXTHON"; break } }); return e } function inputToAry(e) { var t = []; if (e != undefined && e != null) { t = e.constructor == String ? e.indexOf(",") != -1 ? e.split(",") : e.fTrim() != "" ? [e] : [] : e.constructor == Array ? e : [] } return t } function extToSucces(e, t, n, r, i) { mC.isBoolean(e) ? e == true ? n == t ? r[r.length] = i : null : n > 0 ? r[r.length] = i : null : n == t ? r[r.length] = i : null } function getByStyle(e, t, n) { var r = mC.isObj(e) ? e : null; var i = []; if (r != null) { var s = 0; for (var o in r) s++; var u = getAlEAry(); for (var a = 0; a < u.length; a++) { var f = u[a]; var l = 0; var c = document.defaultView ? document.defaultView.getComputedStyle ? document.defaultView.getComputedStyle(f, "") : null : null; var h = f.currentStyle ? f.currentStyle : null; var p; if (n == 1) { p = f.style } else { p = c ? c : h } for (var d in r) { var v = r[d]; if (p[d] != undefined && v.toString().toLowerCase() == p[d].toString().toLowerCase()) { l = l + 1 } } extToSucces(t, s, l, i, f) } } return mCl(i) } function Slide(e, t, n, r) { for (var i = 0; i < r.length; i++) { var s = r[i]; var o = s.offsetWidth.getNum(); var u = s.offsetHeight.getNum(); var a = setInterval(function() { switch (e) { case "right": if (o < t) { s.style.width += n + "px" } else { s.style.width = t + "px"; clearInterval(a) } break } }, 100) } } var mC = new Checker; var mP = new Proto; this.getByIds = function(e) { var t = []; e = mC.isStr.notEmpty(e) ? e.split(",") : mC.isAry.notEmpty(e) ? e : []; for (var n = 0; n < e.length; n++) { var r = e[n]; if (r.fTrim() != "") { if (document.getElementById(r) != null) t[t.length] = document.getElementById(r) } } return mCl(t) }; this.getByInst = function(e) { var t = mC.isSomeThing(e) ? mC.isDomE(e) ? mCl([e]) : mC.ismClass(e) ? e : mC.isAry(e) ? mCl(e) : mCl([]) : mCl([]); return t }; this.getEvent = function(e) { var t = navigator.appName == "Microsoft Internet Explorer" ? window.event : e; return t }; this.getFromEvent = function(e) { var t = mC.Browser().isIE() ? mCl([window.event.srcElement]) : mC.isSomeThing(e) ? e.currentTarget ? mCl([e.currentTarget]) : mCl([]) : mCl([]); return t }; this.getByNames = function(e) { var t = []; var n = inputToAry(e); if (n.length > 0) { var r = getAlEAry(); for (var i = 0; i < r.length; i++) { var s = r[i]; var e = s.getAttribute("name"); for (var o = 0; o < n.length; o++) { var u = n[o]; if (e == u) { t[t.length] = r[i] } } } } return mCl(t) }; this.getByTagNames = function(e) { var t = []; var n = inputToAry(e); if (n.length > 0) { var r = getAlEAry(); for (var i = 0; i < r.length; i++) { var s = r[i]; if (s.tagName) { for (var o = 0; o < n.length; o++) { tnItm = n[o]; tnItm == "*" ? t[t.length] = s : s.tagName.toString().toLowerCase() == tnItm.toString().toLowerCase() ? t[t.length] = s : null } } } } return mCl(t) }; this.getByClassNames = function(e) { var t = []; var n = inputToAry(e); if (n.length > 0) { var r = getAlEAry(); e: for (var i = 0; i < r.length; i++) { var s = r[i]; for (var o = 0; o < n.length; o++) { var e = n[o]; if (mCl([s]).cssClass.Contain(e) == true) { t[t.length] = s; continue e } } } } return mCl(t) }; this.getByAttrs = function(e, t) { var n = mC.isObj.notEmpty(e) ? e : null; var r = []; if (n) { var i = 0; for (var s in n) i++; var o = getAlEAry(); for (var s = 0; s < o.length; s++) { var u = o[s]; var a = u.attributes; var f = 0; if (mC.isSomeThing(a)) { for (atr in n) { for (var l = 0; l < a.length; l++) { if (a[l].name.toString().toLowerCase() == atr.toString().toLowerCase() && a[l].value.toString() == n[atr].toString()) { f = f + 1 } } } extToSucces(t, i, f, r, u) } } } return mCl(r) }; this.getByProps = function(e, t) { var n = []; var r = mC.isObj.notEmpty(e) ? e : null; if (r != null) { var i = 0; for (var s in r) i++; var o = getAlEAry(); for (var s = 0, u = o.length; s < u; s++) { var a = o[s]; var f = 0; var l = mCl(); for (e in r) { var c = a[e]; if (c != undefined) { if (mC.isEqual(c, r[e])) { f = f + 1 } } } extToSucces(t, i, f, n, a) } } return mCl(n) }; this.getByIStyle = function(e, t) { return getByStyle(e, t, 1) }; this.getByCStyle = function(e, t) { return getByStyle(e, t, 2) }; this.getByTypes = function(e) { var t = []; var n = inputToAry(e); if (n != null) { var r = getAlEAry(); e: for (var i = 0; i < r.length; i++) { for (var s = 0; s < n.length; s++) { if (r[i].type) { if (n[s].toLowerCase() == r[i].type) { t[t.length] = r[i]; continue e } } } } } return new mCl(t) }; this.getChilds = function() { var e = []; if (mC.isAry(Es)) { for (var t = 0; t < Es.length; t++) { var n = Es[t].childNodes; for (var r = 0; r < n.length; r++) { e[e.length] = n[r] } } } else { e = document.body.childNodes } return mCl(e) }; this.getAll = function() { return mCl(getAlEAry()) }; this.Parent = function(e) { var t = []; if (mC.isAry.notEmpty(Es)) { for (var n = 0; n < Es.length; n++) { if (Es[n].parentNode) { if (mC.isStr.notEmpty(e)) { var r = Es[n].parentNode; do { if (mC.isSomeThing(r)) { if (mC.isDefined(r.tagName)) { if (r.tagName.toLowerCase() == e.toLowerCase()) { t[t.length] = r; break } } } } while (r = r.parentNode) } else { t[t.length] = Es[n].parentNode; break } } } } return new mCl(t.noDuplicate()) }; this.First = function(e) { var t = []; if (mC.isAry(Es)) { for (var n = 0; n < Es.length; n++) { var r = Es[n]; for (var i = 0; i < r.childNodes.length; i++) { if (mC.isDomE(r.childNodes[i]), 1) { if (mC.isStr.notEmpty(e)) { if (r.childNodes[i].tagName) { if (r.childNodes[i].tagName.toLowerCase() == e.toLowerCase()) { t[t.length] = r.childNodes[i]; break } } } else { if (mC.isDomE(r.childNodes[i], 1)) { t[t.length] = r.childNodes[i]; break } } } } } } return mCl(t) }; this.Last = function(e) { var t = []; if (mC.isAry(Es)) { for (var n = 0; n < Es.length; n++) { var r = Es[n]; for (var i = r.childNodes.length; i--; ) { if (mC.isDomE(r.childNodes[i], 1)) { if (mC.isStr.notEmpty(e)) { if (r.childNodes[i].tagName) { if (r.childNodes[i].tagName.toLowerCase() == e.toLowerCase()) { t[t.length] = r.childNodes[i]; break } } } else { if (mC.isDomE(r.childNodes[i], 1)) { t[t.length] = r.childNodes[i]; break } } } } } } return mCl(t) }; this.Next = function(e) { var t = []; if (mC.isAry(Es)) { for (var n = 0; n < Es.length; n++) { var r = Es[n]; if (r.nextSibling) { r = r.nextSibling; do { if (mC.isDomE(r, 1)) { if (mC.isStr.notEmpty(e)) { if (r.tagName.toLowerCase() == e.toLowerCase()) { t[t.length] = r; break } } else { if (mC.isDomE(r, 1)) { t[t.length] = r; break } } } } while (r = r.nextSibling) } } } return mCl(t) }; this.Prev = function(e) { var t = []; if (mC.isAry(Es)) { for (var n = 0; n < Es.length; n++) { var r = Es[n]; if (r.previousSibling) { r = r.previousSibling; do { if (mC.isDomE(r, 1)) { if (mC.isStr.notEmpty(e)) { if (r.tagName.toLowerCase() == e.toLowerCase()) { t[t.length] = r; break } } else { if (mC.isDomE(r, 1)) { t[t.length] = r; break } } } } while (r = r.previousSibling) } } } return mCl(t) }; this.Each = function(e) { for (var t = 0; t < Es.length; t++) { e(new mClass([Es[t]]), t) } return mCl(Es) }; this.Count = mC.isAry(Es) ? Es.length : 0; this.Elements = mC.isAry.notEmpty(Es) ? Es : []; this.Element = mC.isAry.notEmpty(Es) ? Es[0] : null; this.Show = function(e) { if (Es) { for (var t = 0; t < Es.length; t++) { var n = Es[t]; if (e) { if (e.constructor == String) { if (e.indexOf(":") != -1) { n.style[e.split(":")[0]] = e.split(":")[1] } else { switch (e.toLocaleLowerCase()) { case "display": n.style["display"] = "block"; break; case "visibility": n.style["visibility"] = "visible"; break } } this.Opacity(100) } else { if (e.Fade) { if (e.Fade.constructor == Boolean) { if (e.Fade == true) { (new mClass([n])).fadeIn({ Time: 20, Range: 4, Type: "display" }) } } else if (e.Fade.constructor == Object) { (new mClass([n])).fadeIn(e.Fade) } else if (e.Fade.constructor == String) { switch (e.Fade.toLowerCase()) { case "slow": (new mClass([n])).fadeIn({ Time: 50, Range: 4, Type: "display" }); break; case "average": (new mClass([n])).fadeIn({ Time: 30, Range: 4, Type: "display" }); break; case "fast": (new mClass([n])).fadeIn({ Time: 20, Range: 4, Type: "display" }); break } } } } } else { n.style["display"] = "block"; this.Opacity(100) } } } return this }; this.Hide = function(e) { if (Es) { for (var t = 0; t < Es.length; t++) { var n = Es[t]; if (e) { if (e.constructor == String) { if (e.indexOf(":") != -1) { n.style[e.split(":")[0]] = e.split(":")[1] } else { switch (e.toLocaleLowerCase()) { case "display": n.style["display"] = "none"; break; case "visibility": n.style["visibility"] = "hidden"; break } } this.Opacity(0) } else { if (e.Fade) { if (e.Fade.constructor == Boolean) { if (e.Fade == true) { (new mClass([n])).fadeOut({ Time: 20, Range: 4, Type: "display" }) } } else if (e.Fade.constructor == Object) { (new mClass([n])).fadeOut(e.Fade) } else if (e.Fade.constructor == String) { switch (e.Fade.toLowerCase()) { case "slow": (new mClass([n])).fadeOut({ Time: 50, Range: 4, Type: "display" }); break; case "average": (new mClass([n])).fadeOut({ Time: 30, Range: 4, Type: "display" }); break; case "fast": (new mClass([n])).fadeOut({ Time: 20, Range: 4, Type: "display" }); break } } } } } else { n.style["display"] = "none"; this.Opacity(0) } } } return this }; this.Opacity = function(e) { var t = 0; if (Es) { if (e != undefined) { for (var n = 0; n < Es.length; n++) { var r = Es[n]; if (e != undefined && e != null) { r.style[document.all ? "filter" : "opacity"] = document.all ? "alpha(opacity=" + e + ")" : e / 100 } } } else { t = Es[0].style[document.all ? "filter" : "opacity"] != "" ? document.all ? Number(Es[0].style["filter"].toString().getNumStr()) : Number(Es[0].style["opacity"]) * 100 : null } return e ? mCl(Es) : t } }; this.fadeIn = function(e) { if (Es) { var t = 10; var n = 30; var r = null; var i; if (e) { t = mC.isNum(e.Time) ? Number(e.Time) : .1; n = mC.isNum(e.Range) ? Number(e.Range) : 40; r = mC.isStr(e.Type) ? e.Type : null; i = mC.isFunc(e.Complete) ? e.Complete : null } (new mClass(Es)).Each(function(e, s) { var o = e.Element; var u = (new mClass([o])).Opacity(); var a = u == null || isNaN(u) == true ? 0 : (new mClass([o])).Opacity(); (new mClass([o])).Opacity(a != null ? Number(a) : 0); if (r != null) { if (r.indexOf(":") != -1) { o.style[r.split(":")[0]] = r.split(":")[1] } else { switch (r.toLocaleLowerCase()) { case "display": o.style["display"] = "block"; break; case "visibility": o.style["visibility"] = "visible"; break } } } var f = mScript.getByInst(o).Props("mVisiblityInterval"); if (f != undefined) { if (f.Runing == true) { if (f.Type == false) { clearInterval(f.Interval) } } } var l = setInterval(function() { a += n; (new mClass([o])).Opacity(a); if (a >= 100) { (new mClass([o])).Opacity(100); clearInterval(l); if (s == Es.length - 1) { if (i != null) { i(new mClass(Es)) } } mScript.getByInst(o).Props("mVisiblityInterval").Runing = false } }, t); mScript.getByInst(o).Props("mVisiblityInterval", { Type: true, Interval: l, Runing: true }) }) } return this }; this.fadeOut = function(e) { if (Es) { var t = 10; var n = 30; var r = null; var i; if (e) { t = mC.isNum(e.Time) ? Number(e.Time) : .1; n = mC.isNum(e.Range) ? Number(e.Range) : 40; r = mC.isStr(e.Type) ? e.Type : null; i = mC.isFunc(e.Complete) ? e.Complete : null } (new mClass(Es)).Each(function(e, s) { var o = e.Element; var u = (new mClass([o])).Opacity(); var a = isNaN(u) == true || u == null ? 100 : u; var f = mScript.getByInst(o).Props("mVisiblityInterval"); if (f != undefined) { if (f.Runing == true) { if (f.Type == true) { clearInterval(f.Interval) } } } var l = setInterval(function() { a -= n; (new mClass([o])).Opacity(a); if (a <= 0) { (new mClass([o])).Opacity(0); clearInterval(l); if (s == Es.length - 1) { if (i != null) { i(new mClass(Es)) } } mScript.getByInst(o).Props("mVisiblityInterval").Runing = false; if (r != null) { if (r.indexOf(":") != -1) { o.style[r.split(":")[0]] = r.split(":")[1] } else { switch (r.toLocaleLowerCase()) { case "display": o.style["display"] = "none"; break; case "visibility": o.style["visibility"] = "hidden"; break } } } } }, t); mScript.getByInst(o).Props("mVisiblityInterval", { Type: false, Interval: l, Runing: true }) }) } return this }; this.Slide = function(e) { if (e) { var t = mC.isStr.notEmpty(e.Direction) ? e.Direction : null; var n = mC.isNum(e.To) ? e.To : null; var r = mC.isNum(e.Range) ? e.Range : 10; if (t != null && n != null) { if (Es) { switch (t.toLowerCase()) { case "right": Slide(t, n, r, Es); break; case "left": Slide(t, n, r, Es); break; case "top": Slide(t, n, r, Es); break; case "bottom": Slide(t, n, r, Es); break } } } } }; this.Event = { Attach: function(e) { if (mC.isObj(e)) { if (mC.isAry.notEmpty(Es)) { for (var t = 0; t < Es.length; t++) { var n = Es[t]; var r = []; var i = mC.isBoolean(e.Bubbling) ? e.Bubbling : false; var s = mC.isStr.notEmpty(e.Events) ? e.Events.fTrim().split(",") : mC.isAry.notEmpty(e.Events) ? e.Events : []; var o = mC.isFunc(e.Function) ? true : false; var u = mC.isStr(e.Name) ? e.Name : null; if (mC.isDomE(n) && s.length > 0 && o == true && u != null) { s.Each(function(t) { if (n.addEventListener) { n.addEventListener(t, e.Function, i) } else if (n.attachEvent) { n.attachEvent("on" + t, e.Function) } n[t + "_" + u] = e.Function }) } } } } return mCl(Es || []) }, Detach: function(e) { if (mC.isObj(e)) { if (mC.isAry.notEmpty(Es)) { for (var t = 0; t < Es.length; t++) { var n = Es[t]; var r = []; var r = []; var i = mC.isBoolean(e.Bubbling) ? e.Bubbling : false; var s = mC.isStr.notEmpty(e.Events) ? e.Events.fTrim().split(",") : mC.isAry.notEmpty(e.Events) ? e.Events : []; var o = mC.isStr(e.Names) ? e.Names.split(",") : mC.isAry(e.Names) ? e.Names : []; if (mC.isDomE(n) && s.length > 0 && o.length > 0) { s.Each(function(e) { o.Each(function(t) { var r = (new mClass([n])).Props(e + "_" + t); if (mC.isSomeThing(r)) { if (n.removeEventListener) { n.removeEventListener(e, r, i) } else if (Element.detachEvent) { n.detachEvent("on" + e, r) } n[e + "_" + t] = null } }) }) } } } } return mCl(Es || []) }, Bind: function(e) { if (mC.isObj(e)) { if (mC.isAry.notEmpty(Es)) { for (var t = 0; t < Es.length; t++) { var n = Es[t]; var r = mC.isStr.notEmpty(e.Events) ? e.Events.fTrim().split(",") : mC.isAry.notEmpty(e.Events) ? e.Events : []; var i = mC.isFunc(e.Function) ? true : false; if (mC.isDomE(n) && r.length > 0 && i == true) { r.Each(function(t) { if (t.fTrim() != "") { t = "on" + t.toLowerCase(); n[t] = function(t) { return e.Function(t, this) } } }) } } } } return mCl(Es || []) }, unBind: function(e) { var t = mC.isStr(e) ? e.split(",") : mC.isAry(e) ? e : []; if (mC.isAry.notEmpty(Es)) { for (var n = 0; n < Es.length; n++) { var r = Es[n]; if (mC.isDomE(r) && t.length > 0) { t.Each(function(e) { if (e.fTrim() != "") { e = "on" + e.toLowerCase(); r[e] = null } }) } } } return mCl(Es || []) }, charCode: function(e) { var t = mC.isSomeThing(window.event) ? window.event : e; var n = mC.Browser().isIE() ? t.button == 0 ? false : true : mC.isSomeThing(t.keyCode) ? false : true; var r = n ? mC.Browser().isIE() ? t.button : t.which : mC.Browser().isIE() ? t.keyCode : t.keyCode == 0 ? t.which : t.keyCode; var i = { Key: r, Ctrl: t.ctrlKey, Alt: t.altKey, Shift: t.shiftKey, Enter: r == 13 ? true : false, Del: r == 46 ? true : false, BackSpace: r == 8 ? true : false, Tab: r == 9 ? true : false, keyString: String.fromCharCode(r) }; return i } }; this.Browser = function() { var e = browserData(); var t = { Version: e.Version, Name: e.Name }; return t }; this.Attrs = function(e, t) { var n = false; if (mC.isAry.notEmpty(Es)) { var r = []; for (var i = 0; i < Es.length; i++) { var s = Es[i]; var o = mC.isStr.notEmpty(e) ? "String" : mC.isObj.notEmpty(e) ? "Object" : null; if (o == "String") { var u = e.indexOf(",") != -1 ? true : false; var a = e.indexOf(":") != -1 ? true : false; var f = []; if (u == true) { f = e.split(","); s.setAttribute(f[0], f[1]); n = true } if (a == true) { f = e.split(":"); s.setAttribute(f[0], f[1]); n = true } if (a == false && u == false) { if (mC.isStr(t)) { s.setAttribute(e, t); n = true } else { if (e.fTrim() != "*") { r[r.length] = s.getAttribute(e) } else { var l = []; var c = s.attributes; if (c.length > 0) { for (var h = 0; h < c.length; h++) { var p = { Key: c[h].name, Value: c[h].value }; l[l.length] = p } } r[r.length] = l } } } } else if (o == "Object") { for (aK in e) { s.setAttribute(aK, e[aK]) } n = true } } } return n == true ? mCl(Es || []) : mC.isAry.notEmpty(Es) ? r[0] : null }; this.Attrs.Have = function(e, t) { var n = false; if (mC.isAry.notEmpty(Es)) { var r = mC.isObj(e) ? e : null; var i = 0; var s = []; if (mC.isSomeThing(r)) { for (var o in r) { i += 1 } for (var u = 0; u < Es.length; u++) { var a = Es[u]; var f = a.attributes; var l = 0; if (mC.isSomeThing(f)) { for (atr in r) { for (var c = 0; c < f.length; c++) { if (f[c].name.toString().toLowerCase() == atr.toString().toLowerCase() && f[c].value.toString() == r[atr].toString()) { l = l + 1 } } } mC.isBoolean(t) ? t == true ? l == i ? n = true : n = false : l > 0 ? n = true : n = false : l == i ? n = true : n = false } } } } return n }; this.Attrs.Remove = function(e) { if (mC.isAry.notEmpty(Es)) { for (var t = 0; t < Es.length; t++) { var n = Es[t]; if (mC.isSomeThing(e)) { var r = mC.isAry.notEmpty(e) ? e : mC.isStr.notEmpty(e) ? e.split(",") : null; if (mC.isDomE(n)) { if (r != null) { for (var i = 0; i < r.length; i++) { var s = r[i]; if (n.getAttribute(s) != null) { n.removeAttribute(s) } } } } } } } return mCl(Es || []) }; this.Props = function(e, t) { var n = false; if (mC.isAry.notEmpty(Es)) { var r = []; for (var i = 0; i < Es.length; i++) { var s = Es[i]; var o = e ? e.constructor == String ? String : e.constructor == Object ? Object : null : null; if (o == String) { var u = e.indexOf(",") != -1 ? true : false; var a = e.indexOf(":") != -1 ? true : false; if (u == true) { var f = e.split(","); s[f[0]] = f[1]; n = true } if (a == true) { var f = e.split(":"); s[f[0]] = f[1]; n = true } if (a == false && u == false) { if (arguments.length == 2) { s[e] = t; n = true } else { if (e.fTrim() != "*") { r[r.length] = s[e] } else { var l = []; for (var c in s) { var h = { Key: c, Value: s[c] }; l[l.length] = h } r[r.length] = l } } } } else if (o == Object) { for (aK in e) { s[aK] = e[aK] } n = true } } } return n == true ? mCl(Es || []) : mC.isAry.notEmpty(Es, 1) ? r[0] : null }; this.Props.Remove = function(e) { if (mC.isAry.notEmpty(Es)) { for (var t = 0; t < Es.length; t++) { var n = Es[t]; if (mC.isSomeThing(e)) { var r = mC.isAry.notEmpty(e) ? e : mC.isStr.notEmpty(e) ? e.split(",") : null; if (mC.isDomE(n)) { if (r != null) { for (var i = 0; i < r.length; i++) { var s = r[i]; if (n[s] != undefined) { delete n[s] } } } } } } } return new mClass(Es || []) }; this.cssClass = function(e) { if (mC.isAry.notEmpty(Es)) { var t = navigator.appName == "Microsoft Internet Explorer"; if (mC.isStr(e)) { for (var n = 0; n < Es.length; n++) { t ? Es[n].className = e : Es[n].setAttribute("class", e) } return this } else { if (t) { return mC.isAry.notEmpty(Es) ? Es[0].className ? Es[0].className : null : null } else { return mC.isAry.notEmpty(Es) ? Es[0].getAttribute ? Es[0].getAttribute("class") : null : null } } } }; this.cssClass.Contain = function(e, t) { var n = mC.isStr.notEmpty(e) ? e.split(",") : mC.isAry.notEmpty(e) ? e : []; var t = t ? t == true ? true : false : false; if (n.length > 0) { var r = 0; var i = n.length; var s = this(); if (s) { var o = s.split(" "); for (var u = 0; u < o.length; u++) { var a = o[u]; for (j = 0; j < n.length; j++) { var f = n[j]; if (a == f) { r += 1 } } } } return t == true ? r == n.length ? true : false : r > 0 ? true : false } return false }; this.cssClass.Add = function(e) { if (mC.isAry(Es)) { for (var t = 0; t < Es.length; t++) { var n = Es[t]; var r = mC.Browser().isIE() ? n.className : n.getAttribute("class"); if (mC.isDomE(n)) { if (mC.isStr.notEmpty(e)) { if (mC.Browser().isIE()) { n.className = mC.isSomeThing(n.className) ? n.className.indexOf(e) != -1 ? n.className : n.className + " " + e : e } else { var i = mC.isSomeThing(n.getAttribute("class")) ? n.getAttribute("class").indexOf(e) != -1 ? n.getAttribute("class") : n.getAttribute("class") + " " + e : e; n.setAttribute("class", i) } } } } } return mCl(Es || []) }; this.cssClass.Remove = function(e) { if (mC.isAry.notEmpty(Es)) { for (var t = 0; t < Es.length; t++) { var n = Es[t]; var r = mC.Browser().isIE() ? n.className : n.getAttribute("class"); if (mC.isSomeThing(e)) { if (e == "*") { mC.Browser().isIE() ? n.className = "" : n.removeAttribute("class") } else { var i = mC.isStr.notEmpty() ? e.split(",") : mC.isAry.notEmpty(e) ? e : []; var s = r.split(" "); for (var o = 0; o < s.length; o++) { for (var u = 0; u < i.length; u++) { if (s[o] == i[u]) { s.splice(o, 1) } } } var a = ""; for (var f = 0; f < s.length; f++) { a += " " + s[f] } a = a.substring(1, a.length); mC.Browser().isIE() ? n.className = a : n.setAttribute("class", a) } } else { mC.Browser().isIE() ? n.className = "" : n.removeAttribute("class") } } } return new mClass(Es || []) }; this.Style = function(e, t) { var n = false; if (mC.isAry.notEmpty(Es)) { var r = []; for (var i = 0; i < Es.length; i++) { var s = Es[i]; var o = e ? e.constructor == String ? String : e.constructor == Object ? Object : null : null; if (o == String) { var u = e.indexOf(",") != -1 ? true : false; var a = e.indexOf(":") != -1 ? true : false; if (u == true) { s.style[e.split(",")[0]] = e.split(",")[1]; n = true } if (a == true) { s.style[e.split(":")[0]] = e.split(":")[1]; n = true } if (u == false && a == false) { if (t) { s.style[e] = t; n = true } else { if (e.fTrim() != "*") { r[r.length] = s.style[e] } else { var f = []; for (var l in s.style) { var c = { Key: l, Value: s.style[l] }; f[f.length] = c } r[r.length] = f } } } } else if (o == Object) { for (var l in e) { s.style[l] = e[l] } n = true } } } return n == true ? new mClass(Es || []) : mC.isAry.notEmpty(r) ? r[0] : null }; this.Style.Rendered = function(e) { var t = null; e = mC.isStr.notEmpty(e) ? e : null; if (e != null) { if (mC.isAry(Es)) { if (Es[0]) { var n = document.defaultView ? document.defaultView.getComputedStyle ? document.defaultView.getComputedStyle : null : null; var r = Es[0].currentStyle ? Es[0].currentStyle : null; if (n) { t = e == "*" ? t = n(Es[0], "") : t = n(Es[0], "")[e] } else if (r) { t = e == "*" ? t = r : t = r[e] } } } } return t }; this.Style.Remove = function(e) { if (mC.isAry.notEmpty(Es)) { for (var t = 0; t < Es.length; t++) { var n = Es[t]; if (e) { var r = mC.isStr.notEmpty(e) ? e.split(",") : mC.isAry.notEmpty(e) ? e : null; if (r != null) { for (var i = 0; i < r.length; i++) { mC.Browser().isIE() ? n.style.removeAttribute(r[i]) : n.style.removeProperty(r[i]) } } } } } return mCl(Es || []) }; this.Style.offSets = function(e) { var t = {}; if (mC.isAry.notEmpty(Es)) { var n = Es[0]; var r = 0; var i = 0; var s = n.offsetWidth; var o = n.offsetHeight; if (n.offsetParent) { do { r += n.offsetLeft; i += n.offsetTop } while (n = n.offsetParent) } var u, a = 0; if (e) { if (mC.Browser().isIE() == true) { u = event.clientX; a = event.clientY } else { u = e.pageX; a = e.pageY } } t = { Element: n, Left: r, Top: i, Right: r + s, Bottom: i + o, Width: s, Height: o, mX: u, mY: a} } return t }; this.Html = function(e) { return mC.isStr(e) ? this.Props("innerHTML", e) : this.Props("innerHTML") }; this.Val = function(e) { return mC.isStr(e) ? this.Props("value", e) : this.Props("value") }; this.Text = function(e) { return mC.isStr(e) ? this.Props(mC.Browser().isIE() ? "innerText" : "textContent", e) : this.Props(mC.Browser().isIE() ? "innerText" : "textContent") }; this.Checked = function(e, t) { if (mC.isSomeThing(e)) { if (mC.isBoolean(t)) { if (t == true) { Check(false) } } else { Check(false) } if (mC.isObj(e) || mC.isBoolean(e)) { return Check(e) } else if (mC.isStr(e) || mC.isAry(e)) { return Check({ Values: e }) } } else { return Check() } }; this.Selected = function(e, t) { if (mC.isSomeThing(e)) { if (mC.isBoolean(t)) { if (t == true) { Select(false) } } else { Select(false) } if (mC.isObj(e) || mC.isBoolean(e)) { return Select(e) } else if (mC.isStr(e) || mC.isAry(e)) { return Select({ Values: e }) } } else { return Select() } }; this.Add = function(e, t) { var n = []; if (mC.isAry(Es)) { if (mC.isStr.notEmpty(e)) { for (var r = 0; r < Es.length; r++) { n[r] = document.createElement(e); if (mC.isObj(t)) { (new mClass([n[r]])).Attrs(t) } Es[r].appendChild(n[r]) } } } else { var i = document.createElement(e); n[n.length] = i; document.body.appendChild(i) } return new mClass(n) }; this.Remove = function(e) { var t = e ? mC.isAry(e) ? e : mC.isDomE(e) ? [e] : mC.ismClass(e) ? e.Elements : [] : Es ? Es : []; for (var n = 0; n < t.length; n++) { if (t[n]) { if (t[n].parentNode) { t[n].parentNode.removeChild(t[n]) } } } return this }; this.Replace = function(e, t) { var n = []; if (mC.isSomeThing(e)) { for (var r = 0; r < Es.length; r++) { n[r] = document.createElement(e); var i = new mClass([n[r]]); if (mC.isObj(t)) { i.Attrs(t) } Es[r].parentNode.insertBefore(n[r], Es[r]); Es[r].parentNode.removeChild(Es[r]) } } return new mClass(n) }; this.Move = { toFirst: function() { if (mC.isAry.notEmpty(Es)) { for (var e = 0; e < Es.length; e++) { var t = Es[e]; var n = t.parentNode; if (n != null) { if (n.childNodes.length > 1) { n.insertBefore(t, n.childNodes[0]) } } } } return new mClass(Es || []) }, toLast: function() { if (mC.isAry.notEmpty(Es)) { for (var e = 0; e < Es.length; e++) { var t = Es[e]; var n = t.parentNode; if (n != null) { if (n.childNodes.length > 1) { n.insertBefore(t, n.childNodes[n.childNodes.length - 1]) } } } } return new mClass(Es || []) }, Before: function(e) { var t = mC.ismClass(e) ? e.Elements : mC.isDomE(e) ? [e] : mC.isAry(e) ? e : []; for (var n = 0; n < t.length; n++) { var r = Es.length - 1; for (; r > -1; r--) { t[n].parentNode.insertBefore(Es[r], t[n]) } } return new mClass(Es) }, After: function(e) { var t = mC.ismClass(e) ? e.Elements : mC.isDomE(e) ? [e] : mC.isAry(e) ? e : []; for (var n = 0; n < t.length; n++) { var r = Es.length - 1; for (; r > -1; r--) { t[n].parentNode.insertBefore(Es[r], t[n]); t[n].parentNode.insertBefore(Es[r], t[n].nextSibling) } } return new mClass(Es) } }; this.DOMExtend = function(name, fn) { if (mC.isAry.notEmpty(Es)) { this.Props(name, fn) } else { if (mC.Browser().isIE() == false) { eval("HTMLElement.prototype." + name + " = fn") } else { var _createElement = document.createElement; document.createElement = function(tag) { var _elem = _createElement(tag); eval("_elem.constructor." + name + " = fn"); return _elem }; var _getElementById = document.getElementById; document.getElementById = function(id) { var _elem = _getElementById(id); eval("_elem.constructor." + name + " = fn"); return _elem }; var _getElementsByTagName = document.getElementsByTagName; document.getElementsByTagName = function(tag) { var _arr = _getElementsByTagName(tag); for (var _elem = 0; _elem < _arr.length; _elem++) eval("_arr[_elem].constructor." + name + " = fn"); return _arr }; var _getElementsByName = document.getElementsByName; document.getElementsByName = function(n) { var _arr = _getElementsByName(n); for (var _elem = 0; _elem < _arr.length; _elem++) eval("_arr[_elem].constructor." + name + " = fn"); return _arr }; var _getElementsByClassName = document.getElementsByClassName; document.getElementsByClassName = function(c) { var _arr = _getElementsByClassName(c); for (var _elem = 0; _elem < _arr.length; _elem++) eval("_arr[_elem].constructor." + name + " = fn"); return _arr } } } return this }; this.Cookie = { Set: function(e, t, n) { var r = false; if (mC.isStr.notEmpty(e) && mC.isStr(t)) { var i = ""; if (mC.isNum(n)) { var s = new Date; s.setTime(s.getTime() + n * 24 * 60 * 60 * 1e3); i = "; expires=" + s.toGMTString() } document.cookie = e + "=" + t + i + "; path=/"; r = true } return r }, Get: function(e) { if (mC.isStr.notEmpty(e)) { var t = e + "="; var n = document.cookie.split(";"); for (var r = 0; r < n.length; r++) { var i = n[r]; while (i.charAt(0) == " ") i = i.substring(1, i.length); if (i.indexOf(t) == 0) { return i.substring(t.length, i.length) } else { return null } } } else { return null } }, Remove: function(e) { var t = false; if (mC.isStr.notEmpty(e)) { this.Set(e, "", -1); t = true } return t } }; this.Ajax = function(e) { var t = window.XMLHttpRequest ? new XMLHttpRequest : window.ActiveXObject ? new ActiveXObject("Microsoft.XMLHTTP") : null; if (mC.isStr.notEmpty(e.Name)) { mScriptAjaxCalls[mScriptAjaxCalls.length] = { Name: e.Name, Req: t} } var n = mC.isBoolean(e.Async) ? e.Async : true; t.open(e.Method ? e.Method.toUpperCase() : "POST", e.Url, n); if (e.contentType) { t.setRequestHeader("Content-Type", e.contentType) } if (e.requestHeaders) { for (var r = 0; r < e.requestHeaders.length; r++) { t.setRequestHeader(e.requestHeaders[r].Key, e.requestHeaders[r].Value) } } t.send(mC.isSomeThing(e.Data) ? e.Data : null); if (n) { t.onreadystatechange = function() { switch (t.readyState) { case 0: if (e.onUnInitialized) { e.onUnInitialized() } break; case 1: break; if (e.onLoading) { e.onLoading() }; case 2: if (e.onLoaded) { e.onLoaded() } break; case 3: if (e.onInterActive) { e.onInterActive() } break; case 4: if (t.status == 200) { if (e.onSuccess) { var n = { Text: t.responseText, Xml: t.responseXML, Json: t.responseText.jStrToJson().Result == true ? t.responseText.jStrToJson().Json.d : null, Req: t }; e.onSuccess(n) } } else { if (e.onError) { e.onError({ Req: t, Text: t.responseText }) } } break } t.ontimeout = e.onTimeOut ? e.onTimeOut() : null } } else { if (t.status == 200) { if (e.onSuccess) { var i = { Text: t.responseText, Xml: t.responseXML, Json: t.responseText.jStrToJson().Result == true ? t.responseText.jStrToJson().Json.d : null, Req: t }; e.onSuccess(i) } } else { if (e.onError) { e.onError({ Req: t, Text: t.responseText }) } } } return t }; this.Ajax.Abort = function(e) { var t = mC.isSomeThing(e) ? mC.isAry.notEmpty(e) ? e : mC.isStr.notEmpty(e) ? e.split(",") : mC.isActiveXObject(e) || mC.isXMLHttpRequest(e) ? [e] : null : null; mScriptAjaxCalls.Each(function(e) { if (t != null) { t.Each(function(t) { if (mC.isStr(t)) { if (t == e.Name) { e.Req.abort() } } else if (mC.isActiveXObject(t) || mC.isXMLHttpRequest(t)) { t.abort() } }) } else { e.Req.abort() } }) }; this.General = { set_SCAPE: function(e) { if (e) { if (Es) { for (var t = 0; t < Es.length; t++) { var n = Es[t]; var r = mCheck.isStr.notEmpty(e["class"]) ? e["class"] : null; if (r) { mScript.getByInst(n).cssClass(r) } var i = mCheck.isObj.notEmpty(e.Style) ? e.Style : null; if (i) { mScript.getByInst(n).Style(i) } var s = mCheck.isObj.notEmpty(e.Attrs) ? e.Attrs : null; if (s) { mScript.getByInst(n).Attrs(s) } var o = mCheck.isObj.notEmpty(e.Props) ? e.Props : null; if (o) { mScript.getByInst(n).Props(o) } var u = mCheck.isObj.notEmpty(e.Events) ? e.Events : null; if (u) { for (var a in u) { mScript.getByInst(n).Event.Bind({ Events: [a], Function: u[a] }) } } } } } } } } function Checker() { function e(e) { return e != undefined ? true : false } function t(e) { return e == undefined ? true : false } function n(t) { return e(t) ? t != null ? true : false : false } function r(e) { return e == null ? true : false } function i(t) { return e(t) && n(t) ? true : false } function s(e) { return i(e) ? e.constructor == Object ? true : false : false } function o(e, t) { var n = new Proto; return s(e) ? f(t) ? n.Object(e).length == t ? true : false : n.Object(e).length > 0 ? true : false : false } function u(e) { return i(e) ? e.constructor == String ? true : false : false } function a(e) { return u(e) ? e.fTrim() != "" ? true : false : false } function f(e) { return i(e) ? e.constructor == Number ? true : false : false } function l(e) { return i(e) ? e.constructor == Boolean ? true : false : false } function c(e) { return i(e) ? e.constructor == Array ? true : false : false } function h(e, t) { return c(e) ? e.length > 0 ? f(t) ? e.length == t ? true : false : true : false : false } function p(e) { return i(e) ? e.constructor == Date ? true : false : false } function d(e) { return i(e) ? e.constructor == Function ? true : false : false } function v(e) { return i(e) ? e.constructor == Error ? true : false : false } function m(e) { return i(e) ? e.constructor == RegExp ? true : false : false } function g(e) { if (XMLHttpRequest) { return i(e) ? e.constructor == XMLHttpRequest ? true : false : false } else { return false } } function y(e) { if (window.ActiveXObject) { return i(e) ? e.constructor == ActiveXObject ? true : false : false } else { return false } } function b(e) { return i(e) ? e.constructor == mClass ? true : false : false } function w(e, t) { var n = 0; if (i(e)) { if (e.nodeType) { var r = e.nodeType; var s = a(t) ? t.split(",") : f(t) ? [t.toString()] : c(t) ? t : []; if (s.length <= 0) { return true } else { s.Each(function(e) { if (e == r) { n = 1 } }); return Boolean(n) } } } return false } function E() { var e = { Is: function(e) { if (a(e)) { var t = navigator.userAgent.toLowerCase(); return t.indexOf(e.fTrim()) != -1 ? true : false } return false }, isIE: function() { return navigator.appName == "Microsoft Internet Explorer" ? true : false }, isOpera: function() { return navigator.appName == "Opera" ? true : false }, isFirefox: function() { return E().Is("firefox") ? true : false }, isChrome: function() { return E().Is("maxthon") ? false : E().Is("chrome") }, isSafari: function() { return E().isChrome() ? false : E().Is("safari") }, isMaxthon: function() { return E().Is("maxthon") ? true : false } }; return e } function S(e, t) { if (e != undefined) { if (e != null) { if (t != undefined) { if (t != null) { switch (true) { case u(e): if (u(t)) { if (e === t) { return true } } break; case f(e): if (f(t)) { if (Number(e) === Number(t)) { return true } } break; case p(e): if (p(t)) { if (Date.parse(e) === Date.parse(t)) { return true } } break; case l(e): if (l(t)) { if (e === t) { return true } } break; case m(e): if (m(t)) { if (e.toString() === t.toString()) { return true } } break; case s(e): if (s(t)) { if ((new Proto).Object(t).Equal(e)) { return true } } break; case c(e): if (c(t)) { if ((new Proto).Array(t).Equal(e)) { return true } } break; default: if (typeof e == "object" && typeof t == "object") { if (e == t) { return true } } break } } else { return true } } else { return true } } } return false } this.isDefined = function(t) { return e(t) }; this.isNotDefined = function(e) { return t(e) }; this.isNotNull = function(e) { return n(e) }; this.isNull = function(e) { return r(e) }; this.isSomeThing = function(e) { return i(e) }; this.isObj = function(e) { return s(e) }; this.isStr = function(e) { return u(e) }; this.isNum = function(e) { return f(e) }; this.isBoolean = function(e) { return l(e) }; this.isAry = function(e) { return c(e) }; this.isDate = function(e) { return p(e) }; this.isFunc = function(e) { return d(e) }; this.isError = function(e) { return v(e) }; this.isRegExp = function(e) { return m(e) }; this.isXMLHttpRequest = function(e) { return g(e) }; this.isActiveXObject = function(e) { return y(e) }; this.ismClass = function(e) { return b(e) }; this.isDomE = function(e, t) { return w(e, t) }; this.Browser = function() { return E() }; this.isEqual = function(e, t) { return S(e, t) }; this.isObj.notEmpty = function(e, t) { return o(e, t) }; this.isStr.notEmpty = function(e, t) { return a(e, t) }; this.isAry.notEmpty = function(e, t) { return h(e, t) } } function Proto() { function e() { return new Proto } var t = new Checker; this.Object = function(n) { if (t.isSomeThing(n)) { var r = []; var i = 0; for (var s in n) { r[r.length] = n[s]; i += 1 } var o = { length: i, Each: function(e) { for (var t in n) { e(t, n[t]) } }, Equal: function(e, r) { if (t.isObj(e)) { var i = t.isBoolean(r) ? r == true ? true : false : true; var s = (new Proto).Object(e).length; var o = 0; for (var u in n) { if (t.isEqual(e[u], n[u])) { o += 1 } } } return i == true ? o == s ? true : false : o > 0 ? true : false }, Every: function(e) { if (e.constructor == Function) { for (var t in n) { if (e(n[t]) == false) { return false } } } return true }, Map: function(e) { var t = []; if (e.constructor == Function) { for (var r in n) { t[t.length] = e(n[r]) } } return t }, Stringfy: function(r) { var i = t.isBoolean(r) ? r : false; var s = ""; if (e().Object(n).length > 0) { var o = 0; s += "{"; for (var u in n) { s += o > 0 ? "," : ""; o += 1; var a = u; var f = n[u]; s += (i ? a : '"' + a + '"') + ":"; switch (true) { case t.isStr(f): s += '"' + f + '"'; break; case t.isNum(f): s += f; break; case t.isBoolean(f): s += f; break; case t.isDate(f): s += f.toString(); break; case t.isFunc(f): s += '"' + f.toString() + '"'; break; case t.isAry(f): strAry = e().Array(f).Stringfy(); s += strAry; break; case t.isObj(f): s += e().Object(f).Stringfy(i); break; case t.isNull(f): s += "null"; break; case t.isNotDefined(f): s += "undefined"; break; default: s += e().Object(f).Stringfy(i); break } } s += "}"; return s } else { s += "{}"; return s } return n }, toQueryString: function() { var r = ""; if (e().Object(n).length > 0) { var i = 0; for (var s in n) { r += i > 0 ? "&" : ""; i += 1; var o = s; var u = n[s]; r += o + "="; switch (true) { case t.isStr(u): r += '"' + u + '"'; break; case t.isNum(u): r += u; break; case t.isBoolean(u): r += u; break; case t.isDate(u): r += u.toString(); break; case t.isFunc(u): r += '"' + u.toString() + '"'; break; case t.isAry(u): strAry = e().Array(u).Stringfy(); r += strAry; break; case t.isObj(u): r += e().Object(u).Stringfy(true); break; case t.isNull(u): r += "null"; break; case t.isNotDefined(u): r += "undefined"; break; default: r += e().Object(u).Stringfy(true); break } } return r } return n }, toArray: function() { return r }, Remove: function(e) { e = t.isStr.notEmpty(e) ? e.split(",") : t.isAry(e) ? e : []; for (var r = 0; r < e.length; r++) { if (t.isSomeThing(n[e[r]])) { delete n[e[r]] } } return n }, Copy: function(e, r) { var i = { To: function(i) { i = t.isObj(i) ? [i] : t.isAry(i) ? i : []; if (t.isSomeThing(e)) { e = t.isStr.notEmpty(e) ? e.fTrim() == "*" ? ["*"] : e.split(",") : t.isAry(e) ? e : []; r = t.isBoolean(r) ? r : false } else { e = ["*"]; r = false } if (e[0] == "*") { for (var s = 0; s < i.length; s++) { for (var o in n) { if (t.isAry(i[s])) { i[s][i[s].length] = obk[o] } else { i[s][o] = obk[o] } } } } else { for (var u = 0; u < e.length; u++) { for (var s = 0; s < i.length; s++) { if (n[e[u]]) { if (t.isAry(i[s])) { i[s][i[s].length] = n[e[u]] } else { i[s][e[u]] = n[e[u]] } } } } } } }; return i } }; return o } return null }; this.Array = function(n) { if (t.isAry(n)) { var r = { indexOf: function(e) { var r = n.length; var i = Number(arguments[1]) || 0; i = i < 0 ? Math.ceil(i) : Math.floor(i); if (i < 0) i += r; for (; i < r; i++) { if (i in n) { if (t.isEqual(n[i], e)) { return i } } } return -1 }, lastIndexOf: function(e) { var r = n.length; var i = Number(arguments[1]); if (isNaN(i)) { i = r - 1 } else { i = i < 0 ? Math.ceil(i) : Math.floor(i); if (i < 0) { i += r } else if (i >= r) { i = r - 1 } } for (; i > -1; i--) { if (i in n) { if (t.isEqual(n[i], e)) { return i } } } return -1 }, indexsOf: function(e) { var t = []; var r = (new Proto).Array(n).indexOf(e); while (r != -1) { t[t.length] = r; r = (new Proto).Array(n).indexOf(e, ++r) } return t }, Equal: function(e, t) { if (e.constructor == Array) { var r = new Checker; var i = n.length; var s = 0; var o = 0; var u = t != undefined && t != null && t.constructor == Boolean ? t == true ? true : false : true; for (var a = 0; a < e.length; a++) { var f = (new Proto).Array(n).indexOf(e[a]); if (f != -1) { n.splice(f, 1) } } return u == true ? n.length == 0 ? true : false : n.length < i ? true : false } return null }, Every: function(e) { if (e.constructor == Function) { for (var t = 0; t < n.length; t++) { if (e(n[t]) == false) { return false } } return true } }, Map: function(e) { var t = []; if (e.constructor == Function) { for (var r = 0; r < n.length; r++) { t[t.length] = e(n[r]) } } return t }, Object: function(e) { var r = { toArray: function() { var r = []; if (t.isStr.notEmpty(e)) { n.Each(function(t) { if (t[e]) { r[r.length] = t[e] } }) } return r }, Equal: function(r) { if (t.isStr.notEmpty(e)) { for (var i = 0; i < n.length; i++) { if (t.isEqual(n[i], r) == true) { return true } } } return false } }; return r }, Stringfy: function() { var r = "["; for (var i = 0; i < n.length; i++) { var s = n[i]; r += i != 0 ? " , " : ""; switch (true) { case t.isStr(s): r += '"' + s + '"'; break; case t.isNum(s): r += s; break; case t.isBoolean(s): r += s; break; case t.isDate(s): r += s.toString(); break; case t.isFunc(s): r += '"' + s.toString() + '"'; break; case t.isAry(s): strAry = e().Array(s).Stringfy(); r += strAry; break; case t.isObj(s): r += e().Object(s).Stringfy(); break; case t.isNull(s): r += "null"; break; case t.isNotDefined(s): r += "undefined"; break; default: r += e().Object(s).Stringfy(); break } } r += "]"; return r }, Remove: { Items: function(e) { if (t.isAry(e)) { for (var r = n.length; r >= 0; r--) { for (var i = 0; i < e.length; i++) { if (t.isEqual(n[r], e[i])) { n.splice(r, 1) } } } } return n }, Item: function(e) { for (var r = n.length; r >= 0; r--) { if (t.isEqual(n[r], e)) { n.splice(r, 1) } } return n } } }; return r } return null } } String.prototype.Trim = function() { return this.replace(/^\s+|\s+$/g, "") }; String.prototype.lTrim = function(e) { return this.replace(/^\s+/, "") }; String.prototype.rTrim = function() { return this.replace(/\s+$/, "") }; String.prototype.fTrim = function() { var e = new RegExp("\\s", "g"); return this.replace(e, "") }; String.prototype.Replace = function(e, t) { var n = new RegExp(e, "g"); return this.replace(n, t) }; String.prototype.Remove = function(e) { var t = new RegExp(e, "g"); return this.replace(t, "") }; String.prototype.formatToJson = function(e, t) { var n = {}; var r = null; if (mC.isStr.notEmpty(t)) { r = this.split(t); for (ia = 0; ia < r.length; ia++) { var i = r[ia].toString().split(e); n[i[0]] = i[1] } } else { if (mC.isStr.notEmpty(e)) { var i = this.split(e); n[i[0].toString()] = i[1].toString() } } return n }; String.prototype.jStrToJson = function(a) { a = a ? a : {}; var r = { Json: { d: "" }, Result: false }; try { var mChk = new Checker; if (mChk.isStr.notEmpty(this)) { if (a.onBeforeConverting) { a.onBeforeConverting(this) } var evaledObject = eval("(" + this + ")"); r.Json.d = evaledObject.d ? evaledObject.d : evaledObject; r.Result = true; if (a.onSuccess) { a.onSuccess(r) } } else { r.Result = false; r.Json = null } } catch (e) { r.Json = null; r.Result = false; r.errorMessage = e; if (a.onError) { a.onError(r) } } return r }; String.prototype.getNumStr = function() { var e = ""; for (var t = 0; t < this.length; t++) { e += isNaN(this.charAt(t)) == false ? this.charAt(t) : "" } return e }; String.prototype.getNum = function() { var e = ""; for (var t = 0; t < this.length; t++) { e += isNaN(this.charAt(t)) == false ? this.charAt(t) : "" } return Number(e) }; String.prototype.getNumAry = function() { var e = []; for (var t = 0; t < this.length; t++) { if (isNaN(this.charAt(t)) == false) e[e.length] = this.charAt(t) } return e }; String.prototype.Each = function(e) { for (var t in this) { if (this[t].constructor == String) { e(this[t]) } } return this }; String.prototype.startsWith = function(e) { return this.match("^" + e) == e }; String.prototype.endsWith = function(e) { return this.match(e + "$") == e }; Array.prototype.Each = function(e) { for (var t = 0; t < this.length; t++) { e(this[t], t) } return this }; Array.prototype.Contains = function(e) { for (var t = 0; t < this.length; t++) if ((new Checker).isEqual(this[t], e)) return true; return false }; Array.prototype.noDuplicate = function() { var e = new Array; e: for (var t = 0, n = this.length; t < n; t++) { for (var r = 0, i = e.length; r < i; r++) { if ((new Checker).isEqual(e[r], this[t])) { continue e } } e[e.length] = this[t] } return e }; Array.prototype.Duplicates = function(e) { var t = this.sort(); var n = []; for (var r = 0; r < this.length - 1; r++) { if ((new Checker).isEqual(t[r + 1], t[r])) { n[n.length] = (new Checker).isBoolean(e) ? e == true ? t[r] : this[r] : this[r] } } return n }; Array.prototype.Unique = function(e) { var t = this.Duplicates(true); var n = []; e: for (var r = 0; r < this.length; r++) { for (var i = 0; i < t.length; i++) { if ((new Checker).isEqual(this[r], t[i])) { continue e } } n[n.length] = this[r] } return n }; if (!window.mScript) { window.mScript = new mClass; mScript.constructor = mScript } if (!window.mCheck) { window.mCheck = new Checker } if (!window.mProto) { window.mProto = new Proto } if (!window.mScriptAjaxCalls) { window.mScriptAjaxCalls = [] } })()